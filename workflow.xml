<workflow name="%System%_%Source%_Workflow">
    <variable name="stage" value="%SourceDatabase%"/>
    <variable name="path" value="%SisulaPath%\data"/>
    <variable name="filenamePattern" value="%Source%.*\.txt"/>
    <!-- enumeration of on_success_action codes -->
    <variable name="quitWithSuccess" value="1"/>
    <variable name="quitWithFailure" value="2"/>
    <variable name="goToTheNextStep" value="3"/>
    <variable name="goToStepWithId" value="4"/>    
    <!-- recurse directories when searching for files, blank out if no extra options are needed -->
    <variable name="extraOptions" value="-Recurse"/>
    <!-- common parameters that all jobs need for logging to metadata -->
    <variable name="parameters" value="@agentJobId = $(ESCAPE_NONE(JOBID)), @agentStepId = $(ESCAPE_NONE(STEPID))"/>
    <job name="%System%_%Source%_Staging">
        <variable name="tableName" value="MyTable"/>
        <jobstep name="Create raw table" database_name="%stage%" subsystem="TSQL" on_success_action="%goToTheNextStep%">
            EXEC %System%_%Source%_CreateRawTable %parameters%
        </jobstep>
        <jobstep name="Create insert view" database_name="%stage%" subsystem="TSQL" on_success_action="%goToTheNextStep%">
            EXEC %System%_%Source%_CreateInsertView %parameters%
        </jobstep>
        <jobstep name="Bulk insert" database_name="%stage%" subsystem="PowerShell" on_success_action="%goToTheNextStep%">
            $files = @(Get-ChildItem %extraOptions% FileSystem::%path% | Where-Object {$_.Name -match "%filenamePattern%"})
            If ($files.length -eq 0) {
              Throw "No matching files were found in %path%:"
            } Else {
                ForEach ($file in $files) {
                    $fullFilename = $file.FullName
                    $modifiedDate = $file.LastWriteTime
                    Invoke-Sqlcmd "EXEC %System%_%Source%_BulkInsert '$fullFilename', '$modifiedDate', %parameters%" -Database "%stage%" -ErrorAction Stop
                    Write-Output "Loaded file: $fullFilename"
                }
            }
        </jobstep>
        <jobstep name="Create split views" database_name="%stage%" subsystem="TSQL" on_success_action="%goToTheNextStep%">
            EXEC %System%_%Source%_CreateSplitViews %parameters%
        </jobstep>
        <jobstep name="Create error views" database_name="%stage%" subsystem="TSQL" on_success_action="%goToTheNextStep%">
            EXEC %System%_%Source%_CreateErrorViews %parameters%
        </jobstep>
        <jobstep name="Create typed tables" database_name="%stage%" subsystem="TSQL" on_success_action="%goToTheNextStep%">
            EXEC %System%_%Source%_CreateTypedTables %parameters%
        </jobstep>
        <jobstep name="Split raw into typed" database_name="%stage%" subsystem="TSQL" on_success_action="%goToTheNextStep%">
            EXEC %System%_%Source%_SplitRawIntoTyped %parameters%
        </jobstep>
        <jobstep name="Add keys to typed" database_name="%stage%" subsystem="TSQL">
            EXEC %System%_%Source%_AddKeysToTyped %parameters%
        </jobstep>
    </job>
    <job name="%System%_%Source%_Loading">
        <!-- MM_Measurement -->
        <jobstep name="Load temperature" database_name="%stage%" subsystem="TSQL" on_success_action="%goToTheNextStep%">
            EXEC [dbo].[lMM_Measurement__%System%_%Source%_Temperature_Typed] %parameters%
        </jobstep>
        <jobstep name="Load temperature (new format)" database_name="%stage%" subsystem="TSQL" on_success_action="%goToTheNextStep%">
            EXEC [dbo].[lMM_Measurement__%System%_%Source%_TemperatureNew_Typed] %parameters%
        </jobstep>
        <jobstep name="Load pressure" database_name="%stage%" subsystem="TSQL" on_success_action="%goToTheNextStep%">
            EXEC [dbo].[lMM_Measurement__%System%_%Source%_Pressure_Typed] %parameters%
        </jobstep>
        <jobstep name="Load wind" database_name="%stage%" subsystem="TSQL" on_success_action="%goToTheNextStep%">
            EXEC [dbo].[lMM_Measurement__%System%_%Source%_Wind_Typed] %parameters%
        </jobstep>
        <!-- OC_Occasion -->
        <jobstep name="Load occasion" database_name="%stage%" subsystem="TSQL" on_success_action="%goToTheNextStep%">
            EXEC [dbo].[lOC_Occasion__%System%_%Source%_TemperatureNewMetadata_Typed] %parameters%
        </jobstep>
        <!-- MM_taken_OC_on -->
        <jobstep name="Load measurement relationship with occasion" database_name="%stage%" subsystem="TSQL">
            EXEC [dbo].[lMM_taken_OC_on__%System%_%Source%_TemperatureNew_Typed] %parameters%
        </jobstep>
    </job>
</workflow>
